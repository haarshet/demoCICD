public class lwc_BoxAuth_cntrll {

    @AuraEnabled
    public static String getAuthStatus(String code){
        
        
        // framing request to get access token with the code 
        // instantiate http class
        Http http = new HTTP();
        //frame the request
        
        Httprequest req = new Httprequest();
        req.setEndPoint('https://api.box.com/oauth2/token');
        req.setmethod('POST'); 
        req.setHeader('Accept','application/json');
        req.setBody('grant_type=authorization_code&code='+code+'&client_id=x1rs54nuyh9uw9dqsm728xxmopn71mum&client_secret=rNyaYxaThTQl6Jxn073h6JPdU8Px4F4M');
        // step3: send the response and handle the response
        
       
        HttpResponse res = http.send(req);
        String response = res.getBody();
        
        //1.Prase the response
        Map<String,Object> parsedAuthResponse = (Map<String,Object>)JSON.deserializeUntyped(response);

        //2.Extract the Rtoken,Atoken,Etoken and store it in the custom settings
        String accesToken =(String)parsedAuthResponse.get('access_token');
        String refreshToken =(String)parsedAuthResponse.get('refresh_token');
        Integer expiresIn =(Integer)parsedAuthResponse.get('expires_in');

        insert new BoxCredStore__c (SetupOwnerId = UserInfo.getUserId() ,Access_Token__c= accesToken ,Refresh_Token__c = refreshToken ,Expires_in__c = expiresIn);
        
        System.debug(response);

        if (res.getStatusCode() == 200){
            return 'Successfully Authenticated';
        }
        else{
            return 'AuthFailed';
        }
            

    }  
       @AuraEnabled

       
        public static String getFolders(String access_token) {

            BoxCredStore__c credStore = [SELECT Access_Token__c FROM BoxCredStore__c WHERE SetupOwnerId =: UserInfo.getUserId() LIMIT 1 ];
            Http http = new Http();
            Httprequest req = new Httprequest();
            req.setEndPoint('https://api.box.com/2.0/folders/279885973565/items');
            req.setmethod('GET'); 
            req.setHeader('Accept','application/json');
            req.setHeader('Authorization', 'Bearer '+ credStore.Access_Token__c);
            // step3: send the response and handle the response
            HttpResponse res = http.send(req);
            
            return res.getbody();
            
        }
        
        
        public class superItemList{
            public string id_x{set;get;}
            public string type_x{set;get;}
            public string name_x{set;get;}
            
            
            public superItemList(string id_x,string type_x,string name_x){
                this.id_x = id_x;
                this.type_x = type_x;
                this.name_x = name_x;
                
                
                
            }
            
        }
        
        //
        //Generated by AdminBooster
        //
        
        public class fromJSON{
            public String access_token;	//pPOqznepHoSPyYhACEJFsrovXYhuOPTI
            public Integer expires_in;	//3617
            public cls_restricted_to[] restricted_to;
            public String refresh_token;	//DFwb3O5etW4rOAGA8T3WDsxmqyagXQ2wZQB2SsOojhDmtsPQwU8EKbhcjDlPuI12
            public String token_type;	//bearer
            
            
        }
        
        class cls_restricted_to {
        }
        
        //
        //Generated by AdminBooster
        //
        
        public class ParseFolderContent{
            public Integer total_count;	//1
            public cls_entries[] entries;
            public Integer offset;	//0
            public Integer limit_x;	//100
            public cls_order[] order;
            
        }
        
        class cls_entries {
            public String type;	//file
            public String id;	//1619692588324
            public cls_file_version file_version;
            public String sequence_id;	//0
            public String etag;	//0
            public String sha1;	//5585747ce3af2c93811fbdbd3410c5b6c2f9d0dc
            public String name;	//New Adhar card (1).pdf
        }
        class cls_file_version {
            public String type;	//file_version
            public String id;	//1780738213924
            public String sha1;	//5585747ce3af2c93811fbdbd3410c5b6c2f9d0dc
        }
        class cls_order {
            public String by_x;	//type
            public String direction;	//ASC
        }
        
}